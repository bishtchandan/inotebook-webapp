{"ast":null,"code":"import _regeneratorRuntime from\"/home/chandan/Desktop/projects/inotebook-webapp/backend/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chandan/Desktop/projects/inotebook-webapp/backend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/chandan/Desktop/projects/inotebook-webapp/backend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import noteContext from\"./noteContext\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var NoteState=function NoteState(props){var host=\"http://localhost:5000\";var notesInitial=[];var _useState=useState(notesInitial),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];// get a note\nvar getNotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(host,\"/api/notes/fetchallnotes\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"auth-token\":localStorage.getItem('token')}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:json=_context.sent;console.log(json);setNotes(json);case 8:case\"end\":return _context.stop();}}},_callee);}));return function getNotes(){return _ref.apply(this,arguments);};}();// Add a note\nvar addNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title,description,tag){var response,note;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(host,\"/api/notes/addnote\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"auth-token\":localStorage.getItem('token')},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:note=_context2.sent;setNotes(notes.concat(note));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function addNote(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();// delete a note\nvar deleteNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var response,json,newNotes;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(host,\"/api/notes/deletenote/\").concat(id),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",\"auth-token\":localStorage.getItem('token')}});case 2:response=_context3.sent;json=response.json();console.log(json);// Deleting note\nconsole.log(\"Deleting the note with id\"+id);newNotes=notes.filter(function(note){return note._id!==id;});setNotes(newNotes);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteNote(_x4){return _ref3.apply(this,arguments);};}();// edit a note\nvar editNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id,title,description,tag){var response,json,newNotes,index,element;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"\".concat(host,\"/api/notes/updatenote/\").concat(id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",\"auth-token\":localStorage.getItem('token')},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context4.sent;_context4.next=5;return response.json();case 5:json=_context4.sent;console.log(json);newNotes=JSON.parse(JSON.stringify(notes));// logic to edit a note\nindex=0;case 9:if(!(index<notes.length)){_context4.next=19;break;}element=notes[index];if(!(element._id===id)){_context4.next=16;break;}newNotes[index].title=title;newNotes[index].description=description;newNotes[index].tag=tag;return _context4.abrupt(\"break\",19);case 16:index++;_context4.next=9;break;case 19:setNotes(newNotes);case 20:case\"end\":return _context4.stop();}}},_callee4);}));return function editNote(_x5,_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsx(noteContext.Provider,{value:{notes:notes,addNote:addNote,deleteNote:deleteNote,editNote:editNote,getNotes:getNotes},children:props.children});};export default NoteState;","map":{"version":3,"sources":["/home/chandan/Desktop/projects/inotebook-webapp/backend/client/src/context/notes/NoteState.js"],"names":["noteContext","useState","NoteState","props","host","notesInitial","notes","setNotes","getNotes","fetch","method","headers","localStorage","getItem","response","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","children"],"mappings":"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","sourcesContent":["import noteContext from \"./noteContext\";\nimport { useState } from \"react\";\n\nconst NoteState = (props) => {\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // get a note\n  const getNotes = async () => {\n     // API call\n     const response = await fetch(\n      `${host}/api/notes/fetchallnotes`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem('token'),\n        }\n      }\n    );\n    const json = await response.json();\n    console.log(json)\n    setNotes(json)\n  };\n  // Add a note\n  const addNote = async (title, description, tag) => {\n     // API call\n     const response = await fetch(\n      `${host}/api/notes/addnote`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\":  localStorage.getItem('token'),\n        },\n        body: JSON.stringify({title, description, tag}),\n      }\n    );\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n  // delete a note\n  const deleteNote = async (id) => {\n    // API call\n    const response = await fetch(\n      `${host}/api/notes/deletenote/${id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\":  localStorage.getItem('token'),\n        }\n      }\n    );\n    const json = response.json();\n    console.log(json)\n    // Deleting note\n    console.log(\"Deleting the note with id\" + id);\n    const newNotes = notes.filter((note) => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  // edit a note\n  const editNote = async (id, title, description, tag) => {\n    // API call\n    const response = await fetch(\n      `${host}/api/notes/updatenote/${id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\":  localStorage.getItem('token'),\n        },\n        body: JSON.stringify({title, description, tag}),\n      }\n    );\n    const json = await response.json();\n    console.log(json)\n\n    let newNotes = JSON.parse(JSON.stringify(notes))\n    // logic to edit a note\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes)\n  };\n\n  return (\n    <noteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes}}>\n      {props.children}\n    </noteContext.Provider>\n  );\n};\n\nexport default NoteState;\n"]},"metadata":{},"sourceType":"module"}